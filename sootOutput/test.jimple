public class test extends java.lang.Object
{
    static final java.lang.String JDBC_DRIVER;
    static final java.lang.String DB_URL;
    static final java.lang.String USER;
    static final java.lang.String PASS;

    static void <clinit>()
    {
        java.lang.String temp$0, temp$1, temp$2, temp$3;

        <test: java.lang.String JDBC_DRIVER> = "com.mysql.jdbc.Driver";

        temp$0 = "com.mysql.jdbc.Driver";

        <test: java.lang.String JDBC_DRIVER> = temp$0;

        temp$1 = "jdbc:mysql://10.19.126.209:3306/pypi";

        <test: java.lang.String DB_URL> = temp$1;

        temp$2 = "root";

        <test: java.lang.String USER> = temp$2;

        temp$3 = "catlab1a509";

        <test: java.lang.String PASS> = temp$3;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Throwable temp$13;
        java.sql.Connection conn, temp$2;
        java.lang.String[] args;
        java.sql.SQLException se2, se, se, se2, se, se2, se, se2, se;
        java.sql.ResultSet rs, temp$6;
        int a, temp$9;
        java.lang.String sql, temp$5, url, temp$8;
        boolean temp$7, temp$10;
        java.io.PrintStream temp$1, temp$3, temp$11, temp$12;
        java.lang.Exception e;
        java.sql.Statement stmt, temp$4;
        java.lang.Class temp$0;

        args := @parameter0: java.lang.String[];

        conn = null;

        stmt = null;

     label01:
        nop;

        temp$0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.mysql.jdbc.Driver");

        temp$1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke temp$1.<java.io.PrintStream: void println(java.lang.String)>("Connecting to database...");

        temp$2 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)>("jdbc:mysql://10.19.126.209:3306/pypi", "root", "catlab1a509");

        conn = temp$2;

        temp$3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke temp$3.<java.io.PrintStream: void println(java.lang.String)>("Creating statement...");

        temp$4 = interfaceinvoke conn.<java.sql.Connection: java.sql.Statement createStatement()>();

        stmt = temp$4;

        temp$5 = "SELECT url FROM demo where url = MIT";

        sql = temp$5;

        temp$6 = interfaceinvoke stmt.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(sql);

        rs = temp$6;

        temp$7 = interfaceinvoke stmt.<java.sql.Statement: boolean execute(java.lang.String)>(sql);

        temp$8 = interfaceinvoke rs.<java.sql.ResultSet: java.lang.String getString(int)>(0);

        url = temp$8;

        temp$9 = interfaceinvoke rs.<java.sql.ResultSet: int getInt(int)>(1);

        a = temp$9;

        temp$10 = virtualinvoke url.<java.lang.String: boolean equals(java.lang.Object)>("MIT");

        if temp$10 == 0 goto label03;

        goto label02;

     label02:
        nop;

        temp$11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke temp$11.<java.io.PrintStream: void println(java.lang.String)>("Success");

        goto label04;

     label03:
        nop;

        temp$12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke temp$12.<java.io.PrintStream: void println(java.lang.String)>("Fail");

     label04:
        nop;

        interfaceinvoke rs.<java.sql.ResultSet: void close()>();

        interfaceinvoke stmt.<java.sql.Statement: void close()>();

        interfaceinvoke conn.<java.sql.Connection: void close()>();

     label05:
        nop;

     label06:
        nop;

        if stmt != null goto label07;

        goto label08;

     label07:
        nop;

        interfaceinvoke stmt.<java.sql.Statement: void close()>();

     label08:
        nop;

        goto label10;

     label09:
        nop;

        se2 := @caughtexception;

        nop;

        goto label10;

     label10:
        nop;

     label11:
        nop;

        if conn != null goto label12;

        goto label13;

     label12:
        nop;

        interfaceinvoke conn.<java.sql.Connection: void close()>();

     label13:
        nop;

        goto label15;

     label14:
        nop;

        se := @caughtexception;

        virtualinvoke se.<java.sql.SQLException: void printStackTrace()>();

        nop;

        goto label15;

     label15:
        nop;

        goto label51;

     label16:
        nop;

        se := @caughtexception;

        virtualinvoke se.<java.sql.SQLException: void printStackTrace()>();

     label17:
        nop;

     label18:
        nop;

        if stmt != null goto label19;

        goto label20;

     label19:
        nop;

        interfaceinvoke stmt.<java.sql.Statement: void close()>();

     label20:
        nop;

        goto label22;

     label21:
        nop;

        se2 := @caughtexception;

        nop;

        goto label22;

     label22:
        nop;

     label23:
        nop;

        if conn != null goto label24;

        goto label25;

     label24:
        nop;

        interfaceinvoke conn.<java.sql.Connection: void close()>();

     label25:
        nop;

        goto label27;

     label26:
        nop;

        se := @caughtexception;

        virtualinvoke se.<java.sql.SQLException: void printStackTrace()>();

        nop;

        goto label27;

     label27:
        nop;

        goto label51;

     label28:
        nop;

        e := @caughtexception;

        virtualinvoke e.<java.lang.Exception: void printStackTrace()>();

     label29:
        nop;

     label30:
        nop;

        if stmt != null goto label31;

        goto label32;

     label31:
        nop;

        interfaceinvoke stmt.<java.sql.Statement: void close()>();

     label32:
        nop;

        goto label34;

     label33:
        nop;

        se2 := @caughtexception;

        nop;

        goto label34;

     label34:
        nop;

     label35:
        nop;

        if conn != null goto label36;

        goto label37;

     label36:
        nop;

        interfaceinvoke conn.<java.sql.Connection: void close()>();

     label37:
        nop;

        goto label39;

     label38:
        nop;

        se := @caughtexception;

        virtualinvoke se.<java.sql.SQLException: void printStackTrace()>();

        nop;

        goto label39;

     label39:
        nop;

        goto label51;

     label40:
        nop;

        temp$13 := @caughtexception;

     label41:
        nop;

        if stmt != null goto label42;

        goto label43;

     label42:
        nop;

        interfaceinvoke stmt.<java.sql.Statement: void close()>();

     label43:
        nop;

        goto label45;

     label44:
        nop;

        se2 := @caughtexception;

        nop;

        goto label45;

     label45:
        nop;

     label46:
        nop;

        if conn != null goto label47;

        goto label48;

     label47:
        nop;

        interfaceinvoke conn.<java.sql.Connection: void close()>();

     label48:
        nop;

        goto label50;

     label49:
        nop;

        se := @caughtexception;

        virtualinvoke se.<java.sql.SQLException: void printStackTrace()>();

        nop;

        goto label50;

     label50:
        nop;

        throw temp$13;

     label51:
        nop;

        return;

        catch java.sql.SQLException from label06 to label09 with label09;
        catch java.sql.SQLException from label11 to label14 with label14;
        catch java.sql.SQLException from label18 to label21 with label21;
        catch java.sql.SQLException from label23 to label26 with label26;
        catch java.sql.SQLException from label30 to label33 with label33;
        catch java.sql.SQLException from label35 to label38 with label38;
        catch java.sql.SQLException from label41 to label44 with label44;
        catch java.sql.SQLException from label46 to label49 with label49;
        catch java.sql.SQLException from label01 to label05 with label16;
        catch java.lang.Exception from label01 to label05 with label28;
        catch java.lang.Throwable from label01 to label05 with label40;
        catch java.lang.Throwable from label05 to label17 with label40;
        catch java.lang.Throwable from label28 to label29 with label40;
    }

    public void <init>()
    {
        test this;

        this := @this: test;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }
}
